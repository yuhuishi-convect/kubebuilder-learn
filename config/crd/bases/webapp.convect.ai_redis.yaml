
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: redis.webapp.convect.ai
spec:
  additionalPrinterColumns:
  - JSONPath: .status.leaderService
    name: Leader
    type: string
  - JSONPath: .status.followerService
    name: Follower
    type: string
  - JSONPath: .spec.followerReplicas
    name: Desired
    type: integer
  group: webapp.convect.ai
  names:
    kind: Redis
    listKind: RedisList
    plural: redis
    singular: redis
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Redis is the Schema for the redis API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RedisSpec defines the desired state of Redis
          properties:
            followerReplicas:
              format: int32
              type: integer
          type: object
        status:
          description: RedisStatus defines the observed state of Redis
          properties:
            followerService:
              description: The name of the service created for the Redis follower
              type: string
            leaderService:
              description: The name of the service created for the Redis leader
              type: string
          required:
          - followerService
          - leaderService
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
